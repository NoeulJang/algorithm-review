package chap7;

import java.util.*;

public class chap7_3_3sum {

    //배열을 입력받아 합으로 0을 만들 수 있는 3개의 엘리먼트를 출력하라.
    public static void main(String[] args){
        
        int[] nums = {-1, 0, 1, 2, -1, -5};

        System.out.println(threeSum1(nums));

    }
    
    //해결 1. 브루트 포스 풀이, 속도가 느림 {O(n2)}
    public static List<List<Integer>> threeSum1(int[] nums) {

        int left, right, sum = 0;

        List<List<Integer>> results = new ArrayList<>();

        //투 포인터를 사용해야하므로 정렬
        Arrays.sort(nums);

        //투 포인터 시작점 제외하여 nums.length - 2 까지 순회
        for(int i = 0; i < nums.length - 2; i++){
            //중복값 건너뛰기
            if(i > 0 && nums[i] == nums[i - 1]) continue;

            //양 포인터를 좁혀온다.
            left = i + 1;
            right = nums.length - 1;

            while (left < right) {
                sum = nums[i] + nums[left] + nums[right];

                if(sum < 0) left += 1;
                else if (sum > 0) right -= 1;
                else{
                    results.add(Arrays.asList(nums[i], nums[left], nums[right]));

                    //중복값 건너뛰기
                    while (left < right && nums[left] == nums[left + 1]) left += 1;
                    while (left < right && nums[right] == nums[right - 1]) right -= 1;

                    //투포인터 당기기
                    left += 1;
                    right -= 1;

                }
            }
        }

        return results;
    }



} 
